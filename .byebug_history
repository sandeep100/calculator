c
params[:cal_text].split("+,/,*").reject(&:empty?)
params[:cal_text].split(/(\d+\.?\d*)/).reject(&:empty?)
c
params[:cal_text].split(/(\d+\.?\d*)/).reject(&:empty?)
c
eval('"7" * "6"')
eval("7" * "6")
a = [4, "/", 2]
4.method("/").(2)
2.method("/").(2)
2.method("+")(2)
2.method("/").(2)
2.method("+").(2)
2.method(+).(2)
val_to_be_operated.try("+", 2)
abc
c
a.gsub'\"'
a = "2+2*3"
a = 2+2*3
abc[0] + abc[2] / abc[6]
abc[0] + abc[2]
"#{abc[0]}" + "#{abc[2]}"
"#{abc[0]}".to_f + "#{abc[2]}".to_f
abc
"#{abc[0]}".to_f + "#{abc[1]}".to_f
"#{abc[0]}" + "#{abc[2]}"
"#{abc[0]}"
"#{abc[0]}" + "#{abc[1]}"
"#{abc[0]}"+"#{abc[1]}"
(abc[0])+(abc[1])
(abc[0])+11
(abc[0])
(abc[0])+(abc[1])
abc[0]+abc[1]/abc[2]
abc[0]+abc[1]/abs[2]
abc.inject
abc
"+".to_c
"+".to_r
"+".to_s
"+".to_d
"+".to_a
"sand".sub(":","")
abc[1].sub(":","")
abc[1].sub(":")
abc[1]
abc
11 (+.to_sym) 12
11 +.to_sym 12
11 :+ 12
abc
c
a << "+".to_s
a << +.to_s
a << +
a = []
puts "+".ord
puts "H".ord
abc
c
abc
c
?+
puts ?+
puts +
puts ?+
puts ?H+
puts ?H 
"+".to_sym
"+".to_yml
"+".to_d
"+".to_r
"+".to_c
"+".to_a
abc << "#{+}"
abc << +
abc
c
abc
c
cbc <<"+"
cbc <<"1"
cbc <<+
cbc <<2
cbc <<1
cbc = []
a = [100+6/2]
"+".to_f
"100.05".to_f
params[:cal_text].split(/(\d+\.?\d*)/).reject(&:empty?)
params[:cal_text] = "100.5+20.01+3*5/60"
params[:cal_text].split(/(\d+\.?\d*)/).reject(&:empty?)
params[:cal_text].split(/(\?+)|(\.+)|(!+)/)
params[:cal_text].split(/+/)
params[:cal_text].split(/(?=-)/)
params[:cal_text].split(/(?=+)/)
params[:cal_text].split(/(?=/)/)
params[:cal_text].split(/(?=-)/)
params[:cal_text].scan(/.+?/)
params[:cal_text] = "100+20+3*5/60"
params[:cal_text]
params[:cal_text].scan(/.+?/)
params[:cal_text].scan(/*+/[/*+]/)
params[:cal_text].scan(/.+?/)
params[:cal_text].scan(/*+/[/*+]/)
params[:cal_text].scan(/.+?[?!.]/)
params[:cal_text].scan(/([+*/])/)
params[:cal_text].split(/+*/)
params[:cal_text].split(/[+*/]/)
params[:cal_text].split(/([+*/])/)
params[:cal_text]
params[:cal_text].split/([+*/])/
params[:cal_text].split /([+*/])/
params[:cal_text]
a
  a = a.join(", ")
  a = params[:cal_text].split("/")
a
c
a = a.gsub(',', '/')
a = a.join(",")
a = a.split("*")
a = a.gsub(',', '/')
a.split("*")
a = a.gsub(',', '/')
a.gsub(',', '/')
a.gsub('.', '/')
a.gsub('/', '/')
a = a.join(", ")
a = "10*2+40/2/2".split("/")
a.join(", ")
a = "1*2+4/2/1".split("/",'d'")
a = "1*2+4/2/1".split("/",'d'"
a = "1*2+4/2/1".split("/","e")
a
a = "1*2+4/2/1".split("/")
a = "1*2+4/2"
a = "1*2+4/2""
a
"1".to_s.chomp.class
"1".chomp.class
"1".class
a
a.delete(a[1])
a
a = [("1".to_f*"2".to_f), "4", "2/3"]
params[:cal_text].split("*")
params[:cal_text].split("/")
params[:cal_text].split("*")
params[:cal_text] = "1*2*4/2"
params[:cal_text]
params[:cal_text].split("*")
params[:cal_text]
a
c
a = params[:cal_text].chars.with_index do |value index|
a = params[:cal_text].chars.with_index{|value index| puts "value index"}
a = params[:cal_text].chars.with_index{|value index| puts value index}
a = params[:cal_text].chars.map{|a| puts a.index}
a = params[:cal_text].chars.map{|a| puts a}
a = params[:cal_text].chars.map{|a| a.index}
a = params[:cal_text].chars
/.to_f
1.to_f
params[:cal_text].chars
params[:cal_text] = "124*12/"
params[:cal_text].chars.float
params[:cal_text].chars
params[:cal_text]
c
a[-4]
a[-3]
a[-2]
a[-1]
a[0]
Float(a)
a.split("+")
a
a= params[:cal_text]
params[:cal_text].to_yaml
params[:cal_text].to_yml
params[:cal_text].to_d
params[:cal_text].to_r
params[:cal_text]
params[:cal_text].to_c
params[:cal_text].to_f
params[:cal_text].to_a
params[:cal_text].chomp
params[:cal_text]
params[:cal_text]]
params
c
params
request
request.xhra?
request.xhr?
c
params
c
params
c
params
